name: Snyk Security Scan

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for SNYK_TOKEN
        id: check_token
        run: |
          if [ -z "${{ secrets.SNYK_TOKEN }}" ]; then
            echo "::warning::SNYK_TOKEN is not set. Please configure it in your repository secrets."
            echo "has_token=false" >> $GITHUB_OUTPUT
          else
            echo "has_token=true" >> $GITHUB_OUTPUT
          fi

      - name: Install Snyk CLI
        if: steps.check_token.outputs.has_token == 'true'
        run: npm install -g snyk

      - name: Authenticate with Snyk
        if: steps.check_token.outputs.has_token == 'true'
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Monitor in Snyk
        if: steps.check_token.outputs.has_token == 'true'
        run: |
          # Monitor the project and capture the output URL
          OUTPUT=$(snyk monitor --all-projects 2>&1)
          echo "$OUTPUT"
          # Extract and save the project URL for the summary
          PROJECT_URL=$(echo "$OUTPUT" | grep -o 'https://app.snyk.io/org/[^ ]*' || echo '')
          echo "project_url=$PROJECT_URL" >> $GITHUB_OUTPUT
        id: monitor
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk Test
        if: steps.check_token.outputs.has_token == 'true'
        continue-on-error: true
        run: |
          snyk test --all-projects --json > snyk_report.json || true
          if [ ! -f snyk_report.json ]; then
            echo '{"ok":true,"vulnerabilities":[],"dependencyCount":0}' > snyk_report.json
          fi
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Check for vulnerabilities
        if: steps.check_token.outputs.has_token == 'true'
        run: |
          if [ -f snyk_report.json ]; then
            if grep -q '"ok":false' snyk_report.json; then
              echo "::warning::Vulnerabilities found in dependencies. Check the Snyk report for details."
            fi
          fi

      - name: Upload Snyk report
        if: steps.check_token.outputs.has_token == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: snyk-report
          path: snyk_report.json
          retention-days: 7

      - name: Security Scan Summary
        run: |
          if [ "${{ steps.check_token.outputs.has_token }}" == "false" ]; then
            echo "::warning::Security scan skipped - SNYK_TOKEN not configured"
            echo "To enable Snyk security scanning:"
            echo "1. Sign up at https://snyk.io"
            echo "2. Get your API token from https://app.snyk.io/account"
            echo "3. Add the token as SNYK_TOKEN in your repository secrets"
          else
            echo "Security scan completed - Check artifacts for detailed report"
            if [ ! -z "${{ steps.monitor.outputs.project_url }}" ]; then
              echo "View detailed results in Snyk Dashboard: ${{ steps.monitor.outputs.project_url }}"
            fi
          fi

      - name: Report Status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const summary = [];
            if ('${{ steps.check_token.outputs.has_token }}' === 'true') {
              summary.push('‚úÖ Snyk security scan completed');
              if ('${{ steps.monitor.outputs.project_url }}') {
                summary.push(`üîç [View detailed results in Snyk Dashboard](${process.env.PROJECT_URL})`);
              }
            } else {
              summary.push('‚ö†Ô∏è Snyk security scan skipped - SNYK_TOKEN not configured');
            }
            core.summary
              .addHeading('Snyk Security Scan Results')
              .addList(summary)
              .write()
        env:
          PROJECT_URL: ${{ steps.monitor.outputs.project_url }}
